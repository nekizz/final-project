// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: whislist/whilist.proto

package whislist

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Whislist struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HotelId              string   `protobuf:"bytes,2,opt,name=hotel_id,json=hotelId,proto3" json:"hotel_id,omitempty"`
	CustomerId           string   `protobuf:"bytes,3,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt            string   `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Whislist) Reset()         { *m = Whislist{} }
func (m *Whislist) String() string { return proto.CompactTextString(m) }
func (*Whislist) ProtoMessage()    {}
func (*Whislist) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a0fb7b35ae5a79, []int{0}
}
func (m *Whislist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Whislist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Whislist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Whislist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Whislist.Merge(m, src)
}
func (m *Whislist) XXX_Size() int {
	return m.Size()
}
func (m *Whislist) XXX_DiscardUnknown() {
	xxx_messageInfo_Whislist.DiscardUnknown(m)
}

var xxx_messageInfo_Whislist proto.InternalMessageInfo

func (m *Whislist) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Whislist) GetHotelId() string {
	if m != nil {
		return m.HotelId
	}
	return ""
}

func (m *Whislist) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Whislist) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Whislist) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Whislist) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (*Whislist) XXX_MessageName() string {
	return "whislist.Whislist"
}

type OneWhislistRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneWhislistRequest) Reset()         { *m = OneWhislistRequest{} }
func (m *OneWhislistRequest) String() string { return proto.CompactTextString(m) }
func (*OneWhislistRequest) ProtoMessage()    {}
func (*OneWhislistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a0fb7b35ae5a79, []int{1}
}
func (m *OneWhislistRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *OneWhislistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_OneWhislistRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *OneWhislistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneWhislistRequest.Merge(m, src)
}
func (m *OneWhislistRequest) XXX_Size() int {
	return m.Size()
}
func (m *OneWhislistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OneWhislistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OneWhislistRequest proto.InternalMessageInfo

func (m *OneWhislistRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (*OneWhislistRequest) XXX_MessageName() string {
	return "whislist.OneWhislistRequest"
}

type ListWhislistRequest struct {
	Page                 uint32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32   `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	CreatedAtMin         string   `protobuf:"bytes,5,opt,name=created_at_min,json=createdAtMin,proto3" json:"created_at_min,omitempty"`
	CreatedAtMax         string   `protobuf:"bytes,6,opt,name=created_at_max,json=createdAtMax,proto3" json:"created_at_max,omitempty"`
	SearchField          string   `protobuf:"bytes,7,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string   `protobuf:"bytes,8,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWhislistRequest) Reset()         { *m = ListWhislistRequest{} }
func (m *ListWhislistRequest) String() string { return proto.CompactTextString(m) }
func (*ListWhislistRequest) ProtoMessage()    {}
func (*ListWhislistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a0fb7b35ae5a79, []int{2}
}
func (m *ListWhislistRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWhislistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWhislistRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWhislistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWhislistRequest.Merge(m, src)
}
func (m *ListWhislistRequest) XXX_Size() int {
	return m.Size()
}
func (m *ListWhislistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWhislistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWhislistRequest proto.InternalMessageInfo

func (m *ListWhislistRequest) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWhislistRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListWhislistRequest) GetCreatedAtMin() string {
	if m != nil {
		return m.CreatedAtMin
	}
	return ""
}

func (m *ListWhislistRequest) GetCreatedAtMax() string {
	if m != nil {
		return m.CreatedAtMax
	}
	return ""
}

func (m *ListWhislistRequest) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListWhislistRequest) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListWhislistRequest) XXX_MessageName() string {
	return "whislist.ListWhislistRequest"
}

type ListWhislistResponse struct {
	Items                []*Whislist `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxPage              uint32      `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	TotalCount           uint32      `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page                 uint32      `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit                uint32      `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchField          string      `protobuf:"bytes,6,opt,name=search_field,json=searchField,proto3" json:"search_field,omitempty"`
	SearchValue          string      `protobuf:"bytes,7,opt,name=search_value,json=searchValue,proto3" json:"search_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListWhislistResponse) Reset()         { *m = ListWhislistResponse{} }
func (m *ListWhislistResponse) String() string { return proto.CompactTextString(m) }
func (*ListWhislistResponse) ProtoMessage()    {}
func (*ListWhislistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_92a0fb7b35ae5a79, []int{3}
}
func (m *ListWhislistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListWhislistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListWhislistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListWhislistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWhislistResponse.Merge(m, src)
}
func (m *ListWhislistResponse) XXX_Size() int {
	return m.Size()
}
func (m *ListWhislistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWhislistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWhislistResponse proto.InternalMessageInfo

func (m *ListWhislistResponse) GetItems() []*Whislist {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *ListWhislistResponse) GetMaxPage() uint32 {
	if m != nil {
		return m.MaxPage
	}
	return 0
}

func (m *ListWhislistResponse) GetTotalCount() uint32 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListWhislistResponse) GetPage() uint32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListWhislistResponse) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListWhislistResponse) GetSearchField() string {
	if m != nil {
		return m.SearchField
	}
	return ""
}

func (m *ListWhislistResponse) GetSearchValue() string {
	if m != nil {
		return m.SearchValue
	}
	return ""
}

func (*ListWhislistResponse) XXX_MessageName() string {
	return "whislist.ListWhislistResponse"
}
func init() {
	proto.RegisterType((*Whislist)(nil), "whislist.Whislist")
	golang_proto.RegisterType((*Whislist)(nil), "whislist.Whislist")
	proto.RegisterType((*OneWhislistRequest)(nil), "whislist.OneWhislistRequest")
	golang_proto.RegisterType((*OneWhislistRequest)(nil), "whislist.OneWhislistRequest")
	proto.RegisterType((*ListWhislistRequest)(nil), "whislist.ListWhislistRequest")
	golang_proto.RegisterType((*ListWhislistRequest)(nil), "whislist.ListWhislistRequest")
	proto.RegisterType((*ListWhislistResponse)(nil), "whislist.ListWhislistResponse")
	golang_proto.RegisterType((*ListWhislistResponse)(nil), "whislist.ListWhislistResponse")
}

func init() { proto.RegisterFile("whislist/whilist.proto", fileDescriptor_92a0fb7b35ae5a79) }
func init() { golang_proto.RegisterFile("whislist/whilist.proto", fileDescriptor_92a0fb7b35ae5a79) }

var fileDescriptor_92a0fb7b35ae5a79 = []byte{
	// 643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x4f, 0xd4, 0x4e,
	0x18, 0x4e, 0xf7, 0x3f, 0xef, 0xc2, 0xfe, 0x7e, 0x19, 0x56, 0x52, 0x56, 0x58, 0xb0, 0xe1, 0x40,
	0x48, 0x68, 0x13, 0xbc, 0x71, 0x43, 0x14, 0x43, 0xd4, 0x40, 0xd6, 0x88, 0xd1, 0xcb, 0x66, 0xb6,
	0x7d, 0xe9, 0x8e, 0xb4, 0x9d, 0xda, 0x4e, 0x61, 0xc1, 0x78, 0xf1, 0x2b, 0xf8, 0x2d, 0xfc, 0x00,
	0x9e, 0x3d, 0x72, 0xd4, 0xf8, 0x05, 0x0c, 0x78, 0xf4, 0x43, 0x98, 0x99, 0x6e, 0x77, 0xd7, 0xb2,
	0x06, 0x4f, 0xed, 0x3c, 0xcf, 0x33, 0xcf, 0x3c, 0xef, 0x3b, 0x6f, 0x06, 0x16, 0xce, 0xfa, 0x2c,
	0xf6, 0x58, 0x2c, 0xac, 0xb3, 0x3e, 0x93, 0x5f, 0x33, 0x8c, 0xb8, 0xe0, 0xa4, 0x96, 0xe1, 0xad,
	0x4d, 0x97, 0x89, 0x7e, 0xd2, 0x33, 0x6d, 0xee, 0x5b, 0x2e, 0x77, 0xb9, 0xa5, 0x04, 0xbd, 0xe4,
	0x58, 0xad, 0xd4, 0x42, 0xfd, 0xa5, 0x1b, 0x5b, 0x77, 0x5d, 0xce, 0x5d, 0x0f, 0xc7, 0x2a, 0xf4,
	0x43, 0x71, 0x3e, 0x24, 0x97, 0x86, 0x24, 0x0d, 0x99, 0x45, 0x83, 0x80, 0x0b, 0x2a, 0x18, 0x0f,
	0xe2, 0x94, 0x35, 0x3e, 0x6b, 0x50, 0x7b, 0x39, 0x3c, 0x96, 0x34, 0xa0, 0xc0, 0x1c, 0x5d, 0x5b,
	0xd5, 0xd6, 0x67, 0x3a, 0x05, 0xe6, 0x90, 0x45, 0xa8, 0xf5, 0xb9, 0x40, 0xaf, 0xcb, 0x1c, 0xbd,
	0xa0, 0xd0, 0xaa, 0x5a, 0xef, 0x3b, 0x64, 0x05, 0xea, 0x76, 0x12, 0x0b, 0xee, 0x63, 0x24, 0xd9,
	0xa2, 0x62, 0x21, 0x83, 0xf6, 0x1d, 0xb2, 0x0a, 0x75, 0x07, 0x63, 0x3b, 0x62, 0xa1, 0x3c, 0x4e,
	0x2f, 0x29, 0xc1, 0x24, 0x44, 0x96, 0x01, 0xec, 0x08, 0xa9, 0x40, 0xa7, 0x4b, 0x85, 0xde, 0x54,
	0x82, 0x99, 0x21, 0xb2, 0x23, 0x24, 0x9d, 0x84, 0x4e, 0x46, 0xdf, 0x49, 0xe9, 0x21, 0xb2, 0x23,
	0x8c, 0x35, 0x20, 0x07, 0x01, 0x66, 0xd1, 0x3b, 0xf8, 0x36, 0xc1, 0x9b, 0x15, 0x18, 0xdf, 0x34,
	0x98, 0x7f, 0xca, 0x62, 0x91, 0xd7, 0x11, 0x28, 0x85, 0xd4, 0x45, 0x95, 0x7b, 0xae, 0xa3, 0xfe,
	0x49, 0x13, 0xca, 0x1e, 0xf3, 0x99, 0x50, 0x59, 0xe7, 0x3a, 0xe9, 0x82, 0xac, 0x41, 0x63, 0x9c,
	0xb2, 0xeb, 0xb3, 0x40, 0x2f, 0x2b, 0xf7, 0xd9, 0x51, 0xd2, 0x67, 0x2c, 0xc8, 0xab, 0xe8, 0x40,
	0xaf, 0xe4, 0x55, 0x74, 0x40, 0xee, 0xc1, 0x6c, 0x8c, 0x34, 0xb2, 0xfb, 0xdd, 0x63, 0x86, 0x9e,
	0xa3, 0x57, 0xd3, 0xa6, 0xa4, 0xd8, 0x9e, 0x84, 0x26, 0x24, 0xa7, 0xd4, 0x4b, 0x50, 0xaf, 0x4d,
	0x4a, 0x8e, 0x24, 0x64, 0xfc, 0xd2, 0xa0, 0xf9, 0x67, 0x4d, 0x71, 0xc8, 0x83, 0x18, 0xc9, 0x3a,
	0x94, 0x99, 0x40, 0x3f, 0xd6, 0xb5, 0xd5, 0xe2, 0x7a, 0x7d, 0x8b, 0x98, 0xd9, 0x3c, 0x99, 0x23,
	0x69, 0x2a, 0x90, 0x17, 0xeb, 0xd3, 0x41, 0x57, 0xb5, 0xa0, 0xa0, 0xaa, 0xad, 0xfa, 0x74, 0x70,
	0x28, 0xbb, 0xb0, 0x02, 0x75, 0xc1, 0x05, 0xf5, 0xba, 0x36, 0x4f, 0x02, 0x31, 0x6c, 0x10, 0x28,
	0x68, 0x57, 0x22, 0xa3, 0xd6, 0x95, 0xa6, 0xb5, 0xae, 0x3c, 0xd9, 0xba, 0x7c, 0xb9, 0x95, 0xdb,
	0xcb, 0xad, 0xde, 0x28, 0x77, 0xeb, 0x53, 0x11, 0xfe, 0xcb, 0xf2, 0x3f, 0xc7, 0xe8, 0x94, 0xd9,
	0x48, 0xf6, 0xa0, 0xb2, 0xab, 0x1a, 0x4b, 0xa6, 0x14, 0xd9, 0x9a, 0x82, 0x19, 0xcd, 0x0f, 0xdf,
	0x7f, 0x7e, 0x2c, 0x34, 0x8c, 0x19, 0x2b, 0xe3, 0xb6, 0xb5, 0x0d, 0xf2, 0x04, 0x2a, 0x2f, 0xd4,
	0x44, 0xfd, 0xb3, 0xcf, 0xa2, 0xf2, 0x99, 0x6f, 0x35, 0x46, 0x3e, 0xd6, 0x3b, 0xe6, 0xbc, 0x97,
	0x66, 0x07, 0x50, 0x7c, 0x8c, 0x82, 0x2c, 0x8d, 0x77, 0xdd, 0x1c, 0xd0, 0xa9, 0x9e, 0x0b, 0xca,
	0xf3, 0x7f, 0x92, 0xf3, 0x24, 0xaf, 0xa0, 0x24, 0xef, 0x99, 0x2c, 0x8f, 0xf7, 0x4c, 0x99, 0xe5,
	0x56, 0xfb, 0x6f, 0x74, 0x3a, 0x16, 0x06, 0x51, 0xf6, 0xb3, 0x04, 0x46, 0xf6, 0x31, 0x39, 0x82,
	0xca, 0x43, 0xf4, 0x50, 0xe0, 0x2d, 0x71, 0x17, 0xcc, 0xf4, 0xf5, 0x30, 0xb3, 0xa7, 0xc5, 0x7c,
	0x24, 0x9f, 0x96, 0x2c, 0xf2, 0x46, 0x2e, 0xf2, 0x83, 0xc3, 0xcb, 0xab, 0xb6, 0xf6, 0xf5, 0xaa,
	0xad, 0xfd, 0xb8, 0x6a, 0x6b, 0x5f, 0xae, 0xdb, 0xda, 0xe5, 0x75, 0x5b, 0x7b, 0xbd, 0x3d, 0xf1,
	0x9c, 0x05, 0x78, 0xc2, 0x2e, 0x2e, 0xac, 0x63, 0x16, 0x50, 0x6f, 0x33, 0x8c, 0xf8, 0x1b, 0xb4,
	0x85, 0xd5, 0xa3, 0xf6, 0x09, 0x06, 0x8e, 0xe5, 0xf2, 0xcd, 0xb0, 0x27, 0xce, 0x43, 0x1c, 0xd9,
	0xf6, 0x2a, 0xea, 0xe4, 0xfb, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa9, 0xf0, 0xa6, 0x5e, 0x35,
	0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WhislistServiceClient is the client API for WhislistService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WhislistServiceClient interface {
	Create(ctx context.Context, in *Whislist, opts ...grpc.CallOption) (*Whislist, error)
	Update(ctx context.Context, in *Whislist, opts ...grpc.CallOption) (*Whislist, error)
	Get(ctx context.Context, in *OneWhislistRequest, opts ...grpc.CallOption) (*Whislist, error)
	List(ctx context.Context, in *ListWhislistRequest, opts ...grpc.CallOption) (*ListWhislistResponse, error)
	Delete(ctx context.Context, in *OneWhislistRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type whislistServiceClient struct {
	cc *grpc.ClientConn
}

func NewWhislistServiceClient(cc *grpc.ClientConn) WhislistServiceClient {
	return &whislistServiceClient{cc}
}

func (c *whislistServiceClient) Create(ctx context.Context, in *Whislist, opts ...grpc.CallOption) (*Whislist, error) {
	out := new(Whislist)
	err := c.cc.Invoke(ctx, "/whislist.WhislistService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whislistServiceClient) Update(ctx context.Context, in *Whislist, opts ...grpc.CallOption) (*Whislist, error) {
	out := new(Whislist)
	err := c.cc.Invoke(ctx, "/whislist.WhislistService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whislistServiceClient) Get(ctx context.Context, in *OneWhislistRequest, opts ...grpc.CallOption) (*Whislist, error) {
	out := new(Whislist)
	err := c.cc.Invoke(ctx, "/whislist.WhislistService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whislistServiceClient) List(ctx context.Context, in *ListWhislistRequest, opts ...grpc.CallOption) (*ListWhislistResponse, error) {
	out := new(ListWhislistResponse)
	err := c.cc.Invoke(ctx, "/whislist.WhislistService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *whislistServiceClient) Delete(ctx context.Context, in *OneWhislistRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/whislist.WhislistService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WhislistServiceServer is the server API for WhislistService service.
type WhislistServiceServer interface {
	Create(context.Context, *Whislist) (*Whislist, error)
	Update(context.Context, *Whislist) (*Whislist, error)
	Get(context.Context, *OneWhislistRequest) (*Whislist, error)
	List(context.Context, *ListWhislistRequest) (*ListWhislistResponse, error)
	Delete(context.Context, *OneWhislistRequest) (*types.Empty, error)
}

// UnimplementedWhislistServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWhislistServiceServer struct {
}

func (*UnimplementedWhislistServiceServer) Create(ctx context.Context, req *Whislist) (*Whislist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedWhislistServiceServer) Update(ctx context.Context, req *Whislist) (*Whislist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedWhislistServiceServer) Get(ctx context.Context, req *OneWhislistRequest) (*Whislist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedWhislistServiceServer) List(ctx context.Context, req *ListWhislistRequest) (*ListWhislistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedWhislistServiceServer) Delete(ctx context.Context, req *OneWhislistRequest) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterWhislistServiceServer(s *grpc.Server, srv WhislistServiceServer) {
	s.RegisterService(&_WhislistService_serviceDesc, srv)
}

func _WhislistService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Whislist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhislistServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WhislistService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhislistServiceServer).Create(ctx, req.(*Whislist))
	}
	return interceptor(ctx, in, info, handler)
}

func _WhislistService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Whislist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhislistServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WhislistService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhislistServiceServer).Update(ctx, req.(*Whislist))
	}
	return interceptor(ctx, in, info, handler)
}

func _WhislistService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneWhislistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhislistServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WhislistService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhislistServiceServer).Get(ctx, req.(*OneWhislistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WhislistService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWhislistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhislistServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WhislistService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhislistServiceServer).List(ctx, req.(*ListWhislistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WhislistService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OneWhislistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WhislistServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/whislist.WhislistService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WhislistServiceServer).Delete(ctx, req.(*OneWhislistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WhislistService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "whislist.WhislistService",
	HandlerType: (*WhislistServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _WhislistService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _WhislistService_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _WhislistService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _WhislistService_List_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _WhislistService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "whislist/whilist.proto",
}

func (m *Whislist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Whislist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Whislist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdatedAt) > 0 {
		i -= len(m.UpdatedAt)
		copy(dAtA[i:], m.UpdatedAt)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.UpdatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.CreatedAt) > 0 {
		i -= len(m.CreatedAt)
		copy(dAtA[i:], m.CreatedAt)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.CreatedAt)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CustomerId) > 0 {
		i -= len(m.CustomerId)
		copy(dAtA[i:], m.CustomerId)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.CustomerId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.HotelId) > 0 {
		i -= len(m.HotelId)
		copy(dAtA[i:], m.HotelId)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.HotelId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *OneWhislistRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *OneWhislistRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *OneWhislistRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListWhislistRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWhislistRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWhislistRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CreatedAtMax) > 0 {
		i -= len(m.CreatedAtMax)
		copy(dAtA[i:], m.CreatedAtMax)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.CreatedAtMax)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CreatedAtMin) > 0 {
		i -= len(m.CreatedAtMin)
		copy(dAtA[i:], m.CreatedAtMin)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.CreatedAtMin)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Limit != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x20
	}
	if m.Page != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x18
	}
	return len(dAtA) - i, nil
}

func (m *ListWhislistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListWhislistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListWhislistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SearchValue) > 0 {
		i -= len(m.SearchValue)
		copy(dAtA[i:], m.SearchValue)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.SearchValue)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SearchField) > 0 {
		i -= len(m.SearchField)
		copy(dAtA[i:], m.SearchField)
		i = encodeVarintWhilist(dAtA, i, uint64(len(m.SearchField)))
		i--
		dAtA[i] = 0x32
	}
	if m.Limit != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x28
	}
	if m.Page != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.Page))
		i--
		dAtA[i] = 0x20
	}
	if m.TotalCount != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.TotalCount))
		i--
		dAtA[i] = 0x18
	}
	if m.MaxPage != 0 {
		i = encodeVarintWhilist(dAtA, i, uint64(m.MaxPage))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintWhilist(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintWhilist(dAtA []byte, offset int, v uint64) int {
	offset -= sovWhilist(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Whislist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.HotelId)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.CustomerId)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.CreatedAt)
	if l > 0 {
		n += 2 + l + sovWhilist(uint64(l))
	}
	l = len(m.UpdatedAt)
	if l > 0 {
		n += 2 + l + sovWhilist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *OneWhislistRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListWhislistRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Page != 0 {
		n += 1 + sovWhilist(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovWhilist(uint64(m.Limit))
	}
	l = len(m.CreatedAtMin)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.CreatedAtMax)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ListWhislistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovWhilist(uint64(l))
		}
	}
	if m.MaxPage != 0 {
		n += 1 + sovWhilist(uint64(m.MaxPage))
	}
	if m.TotalCount != 0 {
		n += 1 + sovWhilist(uint64(m.TotalCount))
	}
	if m.Page != 0 {
		n += 1 + sovWhilist(uint64(m.Page))
	}
	if m.Limit != 0 {
		n += 1 + sovWhilist(uint64(m.Limit))
	}
	l = len(m.SearchField)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	l = len(m.SearchValue)
	if l > 0 {
		n += 1 + l + sovWhilist(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovWhilist(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWhilist(x uint64) (n int) {
	return sovWhilist(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Whislist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWhilist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Whislist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Whislist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HotelId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HotelId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CustomerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CustomerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdatedAt = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWhilist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWhilist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *OneWhislistRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWhilist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: OneWhislistRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: OneWhislistRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWhilist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWhilist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWhislistRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWhilist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWhislistRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWhislistRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAtMax", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CreatedAtMax = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWhilist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWhilist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListWhislistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWhilist
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListWhislistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListWhislistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &Whislist{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPage", wireType)
			}
			m.MaxPage = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPage |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Page", wireType)
			}
			m.Page = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Page |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchField", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchField = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SearchValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWhilist
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWhilist
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SearchValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipWhilist(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWhilist
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWhilist(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWhilist
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWhilist
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWhilist
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWhilist
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWhilist
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWhilist        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWhilist          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWhilist = fmt.Errorf("proto: unexpected end of group")
)
